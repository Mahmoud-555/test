<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Modern Profile Page</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        crossorigin="anonymous" />


    <style>
        :root {
            --primary: #03101f;
            --primary-light: #07263e;
            --text: #f5f5f5;
            --subtext: #c0c0c0;
            --bg: #0b1a2a;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', sans-serif;
            background: var(--bg);
            color: var(--text);

        }

        .container {
            max-width: 960px;
            margin: auto;
            background: var(--primary);
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
        }

        .profile-header {
            display: flex;
            align-items: center;
            gap: 30px;
            flex-wrap: wrap;
        }

        .profile-img {
            width: 130px;
            height: 130px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--primary-light);
        }

        .profile-info {
            flex: 1;
        }

        .profile-info h1 {
            font-size: 26px;
            font-weight: 700;
        }

        .username {
            color: var(--subtext);
            font-size: 15px;
            margin-top: 4px;
        }

        .bio {
            margin: 10px 0;
            color: var(--subtext);
        }

        .stats {
            display: flex;
            gap: 40px;
            margin: 15px 0;
        }

        .stats div {
            text-align: center;
        }

        .stats span {
            display: block;
            font-size: 13px;
            color: var(--subtext);
        }

        .edit-btn,
        .friend-btn,
        .chat-btn {
            margin-top: 10px;
            padding: 10px 18px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: 0.3s;
        }

        .edit-btn {
            background: var(--primary-light);
            color: white;
        }

        .chat-btn {
            background: #007bff;
            color: white;
            margin-left: 10px;
        }

        .edit-btn:hover {
            background: #103b66;
        }

        .friend-btn {
            background: #198754;
            color: white;
            margin-left: 10px;
        }

        .friend-btn.friended {
            background: #6c757d;
        }

        .tabs {
            display: flex;
            margin-top: 30px;
            border-bottom: 1px solid #1a2c44;
        }

        .tab {
            padding: 12px 20px;
            cursor: pointer;
            background: transparent;
            border: none;
            font-weight: 600;
            color: var(--subtext);
        }

        .tab.active {
            color: white;
            border-bottom: 2px solid white;
        }

        .gallery {
            margin-top: 20px;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
        }

        .gallery img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 10px;
        }

        .tab-content {
            margin-top: 20px;
        }

        /* Friends Section */
        .friends-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 10px;
        }

        .friend-card {
            background: var(--primary-light);
            border-radius: 10px;
            padding: 12px;
            display: flex;
            align-items: center;
            gap: 15px;
            min-width: 250px;
            flex: 1 1 250px;
            color: var(--text);
            transition: background 0.3s;
        }

        .friend-card:hover {
            background: #103b66;
        }

        .friend-card img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid var(--bg);
        }

        .friend-card p {
            color: var(--subtext);
            font-size: 14px;
            margin-top: 4px;
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 10;
        }

        .modal-box {
            background: #fff;
            padding: 25px;
            width: 90%;
            max-width: 400px;
            border-radius: 10px;
            color: #333;
        }

        .modal-box h2 {
            margin-bottom: 15px;
        }

        .modal-box label {
            display: block;
            margin: 10px 0 5px;
        }

        .modal-box input,
        .modal-box textarea {
            width: 100%;
            padding: 8px 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 6px;
        }

        .modal-actions {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
        }

        .modal-actions button {
            padding: 8px 16px;
            font-weight: 600;
            border: none;
            /* border-radius: 6px; */
            cursor: pointer;
        }

        .modal-actions .cancel {
            background: #ccc;
            color: #333;
        }

        .modal-actions button:first-child {
            background: var(--primary);
            color: white;
        }

        .circle-share-button {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            border: none;
            color: white;
            font-size: 24px;
            transition: background-color 0.3s ease;
        }

        .circle-share-button.facebook {
            background-color: #3b5998;
        }

        .circle-share-button.whatsapp {
            background-color: #25D366;
        }

        .circle-share-button.messenger {
            background-color: #0084FF;
        }

        .circle-share-button.twitter {
            background-color: #1DA1F2;
        }

        .circle-share-button.email {
            background-color: #D44638;
        }

        .circle-share-button.linkedin {
            background-color: #0077B5;
        }

        .circle-share-button.telegram {
            background-color: #0088cc;
        }

        .circle-share-button.sms {
            background-color: #4CAF50;
        }

        .circle-share-button.copy {
            background-color: #555;
        }

        .circle-share-button.cancel {
            background-color: #999;
        }

        .circle-share-button:hover {
            filter: brightness(85%);
        }
    </style>



    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', sans-serif;
            background: var(--bg);
            color: var(--text);
            /* padding: 40px 20px; */
        }

        .container {
            max-width: 960px;
            margin: auto;
            background: var(--primary);
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
        }

        .profile-header {
            display: flex;
            align-items: center;
            gap: 30px;
            flex-wrap: wrap;
        }

        .profile-img {
            width: 130px;
            height: 130px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--primary-light);
        }

        .profile-info {
            flex: 1;
        }

        .profile-info h1 {
            font-size: 26px;
            font-weight: 700;
        }

        .username {
            color: var(--subtext);
            font-size: 15px;
            margin-top: 4px;
        }

        .bio {
            margin: 10px 0;
            color: var(--subtext);
        }

        .stats {
            display: flex;
            gap: 40px;
            margin: 15px 0;
        }

        .stats div {
            text-align: center;
        }

        .stats span {
            display: block;
            font-size: 13px;
            color: var(--subtext);
        }

        .edit-btn,
        .friend-btn,
        .chat-btn {
            margin-top: 10px;
            padding: 10px 18px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: 0.3s;
        }

        .edit-btn {
            background: var(--primary-light);
            color: white;
        }

        .chat-btn {
            background: #007bff;
            color: white;
            margin-left: 10px;
        }

        .edit-btn:hover {
            background: #103b66;
        }

        .friend-btn {
            background: #198754;
            color: white;
            margin-left: 10px;
        }

        .friend-btn.friended {
            background: #6c757d;
        }

        .tabs {
            display: flex;
            margin-top: 30px;
            border-bottom: 1px solid #1a2c44;
        }

        .tab {
            padding: 12px 20px;
            cursor: pointer;
            background: transparent;
            border: none;
            font-weight: 600;
            color: var(--subtext);
        }

        .tab.active {
            color: white;
            border-bottom: 2px solid white;
        }

        .gallery {
            margin-top: 20px;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
        }

        .gallery img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 10px;
        }

        .tab-content {
            margin-top: 20px;
        }

        .friends-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 10px;
        }

        .friend-card {
            background: var(--primary-light);
            border-radius: 10px;
            padding: 12px;
            display: flex;
            align-items: center;
            gap: 15px;
            min-width: 250px;
            flex: 1 1 250px;
            color: var(--text);
            transition: background 0.3s;
        }

        .friend-card:hover {
            background: #103b66;
        }

        .friend-card img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid var(--bg);
        }

        .friend-card p {
            color: var(--subtext);
            font-size: 14px;
            margin-top: 4px;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 10;
        }

        .modal-box {
            background: #fff;
            padding: 25px;
            width: 90%;
            max-width: 400px;
            border-radius: 10px;
            color: #333;
        }

        .modal-box h2 {
            margin-bottom: 15px;
        }

        .modal-box label {
            display: block;
            margin: 10px 0 5px;
        }

        .modal-box input,
        .modal-box textarea {
            width: 100%;
            padding: 8px 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 6px;
        }

        .modal-actions {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
        }

        .modal-actions button {
            padding: 8px 16px;
            font-weight: 600;
            border: none;
            /* border-radius: 6px; */
            cursor: pointer;
        }

        .modal-actions .cancel {
            background: #ccc;
            color: #333;
        }

        .modal-actions button:first-child {
            background: var(--primary);
            color: white;
        }

        .image-upload {
            position: relative;
            width: 110px;
            height: 110px;
            margin: 10px auto;
        }

        .image-upload input[type="file"] {
            display: none;
        }

        .image-upload label {
            display: block;
            cursor: pointer;
            position: relative;
            width: 100%;
            height: 100%;
        }

        .image-upload img {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #ddd;
            transition: opacity 0.3s ease;
        }

        .image-upload .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            font-size: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transition: 0.3s;
        }

        .image-upload label:hover .overlay {
            opacity: 1;
        }



        /* Confirmation modal styles */
        #confirmModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            justify-content: center;
            align-items: center;
            z-index: 100;
        }

        #confirmModal.active {
            display: flex;
        }

        #confirmModal .modal-box {
            background: #fff;
            padding: 20px 25px;
            border-radius: 10px;
            max-width: 400px;
            width: 90%;
            color: #333;
            text-align: center;
        }

        #confirmModal .modal-actions {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            gap: 20px;
        }

        #confirmModal .modal-actions button {
            padding: 8px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
        }

        #confirmModal .modal-actions button.cancel {
            background: #ccc;
            color: #333;
        }

        #confirmModal .modal-actions button.confirm {
            background: var(--primary);
            color: white;
        }
    </style>





    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        crossorigin="anonymous" />
</head>

<body>

    <header>

 <button id="shareBtn" onclick="openShareModal()" title="Share"
                style="position: absolute; top: 10px; right: 10px; background:none; border:none; cursor:pointer; font-size: 24px; color: var(--text);">
                <svg width="10" height="10" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"
                    style="width: 15px; height: 15px; position: relative;" preserveAspectRatio="none">
                    <path
                        d="M0 47.76C0 50.72 1.04 53.24 3.12 55.32C5.2 57.4 7.72 58.44 10.68 58.44H46.2C49.12 58.44 51.62 57.4 53.7 55.32C55.78 53.24 56.82 50.72 56.82 47.76V32.4L49.74 38.34V47.76C49.74 48.76 49.4 49.6 48.72 50.28C48.04 50.96 47.2 51.32 46.2 51.36H10.68C9.68 51.36 8.84 51 8.16 50.28C7.48 49.56 7.14 48.72 7.14 47.76V12.24C7.14 11.28 7.48 10.44 8.16 9.72C8.84 9 9.68 8.65999 10.68 8.69999H28.44V1.62H10.68C7.72 1.62 5.2 2.66 3.12 4.74C1.04 6.82 0 9.32 0 12.24L0 47.76ZM10.68 37.14C10.68 40.58 11.36 43.88 12.72 47.04C13.36 43.36 14.76 40.02 16.92 37.02C19.08 34.02 21.76 31.6 24.96 29.76C28.16 27.92 31.68 26.88 35.52 26.64V37.14L56.82 19.38L35.52 1.62V12.24C32.16 12.24 28.94 12.9 25.86 14.22C22.78 15.54 20.14 17.32 17.94 19.56C15.74 21.8 13.96 24.44 12.6 27.48C11.24 30.52 10.6 33.74 10.68 37.14Z"
                        fill="white"></path>
                </svg>
                <!-- <i class="fas fa-pen"></i> -->

            </button>


    </header>
    <div class="container">
        <div class="profile-header" style="position: relative;">
            <img src="<%=user.profileImage%>" class="profile-img" id="profilePic" />
           
            <div class="profile-info">
                <h1 id="profileName">
                    <%=user.name||user.username%>
                </h1>
                <p class="username" id="profileUsername">@<%=user.username%>
                </p>
                <p class="bio" id="profileBio">🌿 Designer. Dreamer. Creator of aesthetic things.</p>
                <div class="stats">
                    <div><strong>325</strong><span>Posts</span></div>
                    <div><strong>20.3k</strong><span>Followers</span></div>
                    <div><strong>512</strong><span>Following</span></div>
                </div>

<%if(myProfile){%>
    <button class="edit-btn" onclick="openModal()"><i class="fas fa-pen" style="margin-right: 6px;"></i>Edit Profile</button>
<%}%>
                        <%if(!myProfile){%>

                            <button class="chat-btn" onclick="alert('Chat with Liam')">Chat</button>

                            <%if(friendStatus==="friended"){%>
                                <button class="friend-btn <%=friendStatus%>" onclick="toggleFriend()"
                                    id="friendBtn">Friends</button>

                                <%}%>

                                    <%if(friendStatus==="add"){%>
                                        <button class="friend-btn <%=friendStatus%>" onclick="toggleFriend()"
                                            id="friendBtn">Add Friend</button>

                                        <%}%>

                                            <%if(friendStatus==="requested"){%>
                                                <button class="friend-btn <%=friendStatus%>" onclick="toggleFriend()"
                                                    id="friendBtn">Request Sent...</button>

                                                <%}%>

                                                    <%}%>

            </div>
        </div>

        <div class="tabs">
            <button class="tab active" onclick="switchTab('posts')">Gallery</button>
            <button class="tab" onclick="switchTab('about')">About</button>
            <button class="tab" onclick="switchTab('friends')">Friends</button>
        </div>

        <div class="tab-content" id="posts">
            <div class="gallery">
                <img src="https://source.unsplash.com/random/301x301?sig=11" />
                <img src="https://source.unsplash.com/random/301x301?sig=12" />
                <img src="https://source.unsplash.com/random/301x301?sig=13" />
                <img src="https://source.unsplash.com/random/301x301?sig=14" />
            </div>
        </div>

        <div class="tab-content" id="about" style="display: none;">
            <p><strong>📍 Location:</strong> Amsterdam, Netherlands</p>
            <p><strong>🎓 Role:</strong> Lead Visual Designer at Float</p>
            <p><strong>🖋 Motto:</strong> "Details make design." 🎨</p>
        </div>

        <div class="tab-content" id="friends" style="display: none;">
            <div class="friends-list">
                <div class="friend-card">
                    <img src="https://i.pravatar.cc/100?img=32" alt="Friend 1" />
                    <div>
                        <strong>Emily Johnson</strong>
                        <p>@emjay</p>
                    </div>
                </div>
                <div class="friend-card">
                    <img src="https://i.pravatar.cc/100?img=45" alt="Friend 2" />
                    <div>
                        <strong>Lucas Becker</strong>
                        <p>@lucasb</p>
                    </div>
                </div>
                <div class="friend-card">
                    <img src="https://i.pravatar.cc/100?img=51" alt="Friend 3" />
                    <div>
                        <strong>Maya Lin</strong>
                        <p>@maya.lin</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- edit Modal -->
    <div class="modal" id="editModal">
        <div class="modal-box">
            <h2>Edit Profile</h2>

            <label>Profile Image</label>
            <div class="image-upload">
                <label for="editImgUpload">
                    <img id="preview" src="https://i.pravatar.cc/150?img=56" />
                    <div class="overlay"><span>📷</span></div>
                </label>
                <input type="file" id="editImgUpload" accept="image/*" onchange="previewImage(event)" />
            </div>
            <label>Name</label>
            <input type="text" id="editName" />
            <label>Username</label>
            <input type="text" id="editUsername" />
            <label>Bio</label>
            <textarea id="editBio"></textarea>

            <div class="modal-actions">
                <button onclick="updateProfile()">Save</button>
                <button class="cancel" onclick="closeModal()">Cancel</button>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal" id="confirmModal">
        <div class="modal-box">
            <h2 id="confirmTitle">Confirm</h2>
            <p id="confirmMessage">Are you sure?</p>
            <div class="modal-actions">
                <button id="confirmYes" class="confirm">Yes</button>
                <button id="confirmNo" class="cancel">No</button>
            </div>
        </div>
    </div>

    <!-- Share Modal -->
    <div class="modal" id="shareModal">
        <div class="modal-box">
            <h2>Share Profile</h2>
            <div id="qrcode" style="margin: 20px auto; width: 180px; height: 180px;"></div>
            <input type="text" id="profileUrl" readonly
                style="width: 100%; padding: 8px; font-size: 14px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 6px;" />
            <div class="modal-actions" style="justify-content: center; flex-wrap: wrap; gap: 15px;">
                <button onclick="copyUrl()" class="circle-share-button copy" title="Copy Link">
                    <i class="fa fa-copy"></i>
                </button>
                <button onclick="shareWhatsApp()" class="circle-share-button whatsapp" title="WhatsApp">
                    <i class="fab fa-whatsapp"></i>
                </button>
                <button onclick="shareMessenger()" class="circle-share-button messenger" title="Messenger">
                    <i class="fab fa-facebook-messenger"></i>
                </button>
                <button onclick="shareFacebook()" class="circle-share-button facebook" title="Facebook">
                    <i class="fab fa-facebook"></i>
                </button>
                <button onclick="shareTwitter()" class="circle-share-button twitter" title="Twitter">
                    <i class="fab fa-twitter"></i>
                </button>
                <button onclick="shareEmail()" class="circle-share-button email" title="Email">
                    <i class="fa fa-envelope"></i>
                </button>
                <button onclick="shareLinkedIn()" class="circle-share-button linkedin" title="LinkedIn">
                    <i class="fab fa-linkedin"></i>
                </button>
                <button onclick="shareTelegram()" class="circle-share-button telegram" title="Telegram">
                    <i class="fab fa-telegram"></i>
                </button>
                <button onclick="shareSMS()" class="circle-share-button sms" title="SMS">
                    <i class="fa fa-sms"></i>
                </button>
                <button class="circle-share-button cancel" onclick="closeShareModal()" title="Close">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
    </div>

</body>

<script>

    function openModal() {
        document.getElementById("editModal").style.display = "flex";
        document.getElementById("editName").value = document.getElementById("profileName").innerText;
        document.getElementById("editUsername").value = document.getElementById("profileUsername").innerText.replace('@', '');
        document.getElementById("editBio").value = document.getElementById("profileBio").innerText;
        document.getElementById("preview").src = document.getElementById("profilePic").src;
    }

    function closeModal() {
        document.getElementById("editModal").style.display = "none";
    }


    function previewImage(event) {
        const preview = document.getElementById("preview");
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }

    function updateProfile() {
        const name = document.getElementById("editName").value;
        const username = document.getElementById("editUsername").value;
        const bio = document.getElementById("editBio").value;
        const img = document.getElementById("preview").src;
        const profileImage = document.getElementById("editImgUpload").files[0]

        let body = new FormData()
        body.append("profileImage", profileImage)
        body.append("bio", bio)
        body.append("name", name)

        console.log(body)
        // send data

        fetch("/api/v1/users", {
            method: "put",
            body: body
        }).then((response) => {

            // updated
            if (response.ok) {
                document.getElementById("profileName").textContent = name;
                document.getElementById("profileUsername").textContent = `@${username}`;
                document.getElementById("profileBio").textContent = bio;
                document.getElementById("profilePic").src = img;

            }

            response.json().then((userData) => {

                console.log(userData);

            }
            )
        }).catch((err) => {
            console.log(err)
        })



        closeModal();
    }




    function switchTab(tab) {
        document.querySelectorAll('.tab-content').forEach(el => el.style.display = 'none');
        document.querySelectorAll('.tab').forEach(btn => btn.classList.remove('active'));
        document.getElementById(tab).style.display = 'block';
        document.querySelector(`.tab[onclick*="${tab}"]`).classList.add('active');
    }

    let isFriend = false;


    window.addEventListener("DOMContentLoaded", () => {
        const saved = localStorage.getItem("isFriend");
        if (saved === "true") {
            isFriend = true;
            const btn = document.getElementById("friendBtn");
            btn.textContent = "Friends";
            btn.classList.add("friended");
        }
    });
</script>

<script>

    const confirmModal = document.getElementById('confirmModal');
    const confirmTitle = document.getElementById('confirmTitle');
    const confirmMessage = document.getElementById('confirmMessage');
    const confirmYes = document.getElementById('confirmYes');
    const confirmNo = document.getElementById('confirmNo');
    friendRequestController = null;


    // Confirmation modal logic
    function showConfirm(title, message) {
        return new Promise((resolve) => {
            confirmTitle.textContent = title;
            confirmMessage.textContent = message;
            confirmModal.classList.add('active');

            function onYes() {
                cleanup();
                resolve(true);
            }
            function onNo() {
                cleanup();
                resolve(false);
            }
            function cleanup() {
                confirmYes.removeEventListener('click', onYes);
                confirmNo.removeEventListener('click', onNo);
                confirmModal.classList.remove('active');
            }

            confirmYes.addEventListener('click', onYes);
            confirmNo.addEventListener('click', onNo);
        });
    }
    function updateFriendButton(status) {
        const btn = document.getElementById('friendBtn');
        if (!btn) {
            console.error('Friend button element not found');
            return;
        }
        btn.disabled = false;
        btn.classList.remove('add', 'requested', 'friended');
        if (status === 'none') {
            btn.textContent = 'Add Friend';
            btn.classList.add('add');
        } else if (status === 'requested') {
            btn.textContent = 'Request Sent...';
            btn.classList.add('requested');
            btn.disabled = false;
        } else if (status === 'friended') {
            btn.textContent = 'Friends';
            btn.classList.add('friended');
        }
    }


    async function toggleFriend() {
        const btn = document.getElementById("friendBtn");
        const url = window.location.href; // Gets the full URL
        const profileId = url.split('/').pop(); // Splits 

        if (btn.classList.contains('add')) {
            // Send friend request with cancellation support
            if (friendRequestController) {
                // Cancel ongoing request
                friendRequestController.abort();
                friendRequestController = null;
                updateFriendButton('none');
                btn.textContent = 'Add Friend';
                btn.classList.remove('requested');
                btn.classList.add('add');
                btn.disabled = false;
                console.log('Friend request cancelled.');
                return;
            }
            friendRequestController = new AbortController();
            btn.textContent = 'Cancel Request';
            btn.classList.remove('add');
            btn.classList.add('requested');
            btn.disabled = false;
            btn.classList.add('animate');


            try {

                const res = await fetch(`/api/v1/friends/friend-request`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ "friendId": profileId }),
                    signal: friendRequestController.signal

                });

                friendRequestController = null;
                if (res.ok) {
                    updateFriendButton('requested');
                    console.log('Friend request sent!');
                } else {
                    console.log('Failed to send friend request.');
                    updateFriendButton('none');
                }
            }
            catch (err) {
                console.log(err);


                if (err.name === 'AbortError') {
                    console.log('Friend request aborted');
                } else {
                    console.log('Error sending friend request.');
                    updateFriendButton('none');
                }
            }
        }
        else if (btn.classList.contains('requested')) {
            console.log(2)

            // Delete/cancel sent friend request
            const confirmed = await showConfirm('Cancel Friend Request', 'Do you want to cancel the friend request?');
            if (confirmed) {
                btn.disabled = true;
                try {
                    const res = await fetch('/api/V1/friends/friend-request', {
                        method: 'DELETE',
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ "friendId": profileId })
                    });
                    if (res.ok) {
                        updateFriendButton('none');
                        console.log('Friend request cancelled.');
                    } else {
                        console.log('Failed to cancel friend request.');
                        btn.disabled = false;
                    }
                } catch (err) {
                    console.log(err);

                    console.log('Error cancelling friend request.');
                    btn.disabled = false;
                }
            } else {
                btn.disabled = false;
            }
        }
        else if (btn.classList.contains('friended')) {
            // Remove friend
            const confirmed = await showConfirm('Remove Friend', 'Do you want to remove this friend?');
            if (confirmed) {
                btn.disabled = true;
                try {
                    const res = await fetch('/api/V1/friends/friend', {
                        method: 'DELETE',
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ "friendId": profileId }),
                    });
                    if (res.ok) {
                        updateFriendButton('none');
                        console.log('Friend removed.');
                    } else {
                        console.log('Failed to remove friend.');
                        btn.disabled = false;
                    }
                } catch (err) {

                    console.log(err);
                    console.log('Error removing friend.');
                    btn.disabled = false;
                }
            } else {
                btn.disabled = false;
            }
        }



        // if (isFriend) {
        //     btn.textContent = "Friends";
        //     btn.classList.add("friended");
        // } 
        // else {
        //     btn.textContent = "Add Friend";
        //     btn.classList.remove("friended");


        //     try {
        //         const url = window.location.href; // Gets the full URL
        //         const profileId = url.split('/').pop(); // Splits 

        //         const response = await fetch(`/api/friends/friend-request`, {
        //             method: "POST",
        //             headers: {
        //                 "Content-Type": "application/json",
        //             },
        //             body: JSON.stringify({ "friendId": profileId }),
        //         });
        //     } catch (error) {
        //         setErrorMessage({
        //             status: "failed",
        //             msg: "An error occurred. Please try again later.",
        //         });
        //         console.log("An error occurred:", error);
        //     }
        // }

        // localStorage.setItem("isFriend", isFriend);
    }
</script>

<script>
    // Share modal logic
    function openShareModal() {
        const shareModal = document.getElementById('shareModal');
        const profileUrlInput = document.getElementById('profileUrl');
        const qrcodeContainer = document.getElementById('qrcode');
        const profileUrl = window.location.href;

        profileUrlInput.value = profileUrl;

        // Clear previous QR code if any
        qrcodeContainer.innerHTML = '';

        // Generate QR code
        new QRCode(qrcodeContainer, {
            text: profileUrl,
            width: 180,
            height: 180,
            colorDark: "#000000",
            colorLight: "#ffffff",
            correctLevel: QRCode.CorrectLevel.H
        });

        shareModal.style.display = 'flex';
    }

    function closeShareModal() {
        document.getElementById('shareModal').style.display = 'none';
    }

    function copyUrl() {
        const profileUrlInput = document.getElementById('profileUrl');
        profileUrlInput.select();
        profileUrlInput.setSelectionRange(0, 99999); // For mobile devices

        try {
            const successful = document.execCommand('copy');
            if (successful) {
                alert('Profile URL copied to clipboard!');
            } else {
                alert('Failed to copy URL. Please copy manually.');
            }
        } catch (err) {
            alert('Failed to copy URL. Please copy manually.');
        }
    }

    function shareWhatsApp() {
        const profileUrl = encodeURIComponent(window.location.href);
        const whatsappUrl = `https://api.whatsapp.com/send?text=${profileUrl}`;
        window.open(whatsappUrl, '_blank');
    }

    function shareMessenger() {
        const profileUrl = encodeURIComponent(window.location.href);
        const messengerUrl = `fb-messenger://share?link=${profileUrl}`;
        window.open(messengerUrl, '_blank');
    }

    function shareFacebook() {
        const profileUrl = encodeURIComponent(window.location.href);
        const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${profileUrl}`;
        window.open(facebookUrl, '_blank');
    }

    function shareTwitter() {
        const profileUrl = encodeURIComponent(window.location.href);
        const twitterUrl = `https://twitter.com/intent/tweet?url=${profileUrl}`;
        window.open(twitterUrl, '_blank');
    }

    function shareEmail() {
        const profileUrl = encodeURIComponent(window.location.href);
        const subject = encodeURIComponent('Check out this profile');
        const body = encodeURIComponent(`Check out this profile: ${window.location.href}`);
        const mailtoUrl = `mailto:?subject=${subject}&body=${body}`;
        window.location.href = mailtoUrl;
    }

    function shareLinkedIn() {
        const profileUrl = encodeURIComponent(window.location.href);
        const linkedInUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${profileUrl}`;
        window.open(linkedInUrl, '_blank');
    }

    function shareTelegram() {
        const profileUrl = encodeURIComponent(window.location.href);
        const telegramUrl = `https://t.me/share/url?url=${profileUrl}`;
        window.open(telegramUrl, '_blank');
    }

    function shareSMS() {
        const profileUrl = encodeURIComponent(window.location.href);
        const smsUrl = `sms:?&body=${profileUrl}`;
        window.location.href = smsUrl;
    }
</script>

</html>