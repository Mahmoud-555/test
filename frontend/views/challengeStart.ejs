<!doctybe html>
  <html>

  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet">

    <!-- <link rel="stylesheet" href="/stylesheets/styles.css"> -->
    <!-- quiz style -->
    <style>
      :root {
        --primary: #4361ee;
        --secondary: #3f37c9;
        --accent: #f72585;
        --light: #f8f9fa;
        --dark: #212529;
        --success: #4cc9f0;
        --warning: #f9c74f;
        --danger: #f94144;
        --gray: #adb5bd;
        --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        --gradient: linear-gradient(135deg, #4361ee 0%, #3a0ca3 100%);
      }

      * {
        margin: 0;

        padding: 0;
        box-sizing: border-box
      }

      ::-webkit-scrollbar {
        width: 0px;
        height: 0px;
      }

      body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #4361ee 0%, #3a0ca3 100%);
        /* background: #03101f; */
        /* font-family: Arial, sans-serif; */
        /* background-color: #f4f4f4; */
        width: 100vw;

      }

      .quiz-container {
        width: 100%;
        max-width: 1200px;
        min-height: 100vh;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 8px;
        box-shadow: var(--card-shadow);

        position: relative;
        display: none;
        margin: auto;
        /* background-color: #fff; */
        /* padding: 20px; */
        /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); */
        /* max-width: 800px; */
        padding-top: 8px;
        animation: fadeIn1 .4s;
      }

      .main-content {
        flex: 3;
        padding: 30px;
        display: flex;
        flex-direction: column;
        /* justify-content: space-between; */
        border-right: 1px solid rgba(0, 0, 0, 0.05);
      }

      h1 {
        text-align: center;
      }

      /* question-text */
      .question {
        display: flex;
        align-items: center;
        font-size: 1.8rem;
        font-weight: 600;
        line-height: 1.4;
        color: var(--dark);
        margin-bottom: 30px;

        animation: fadeIn1 2s;
        min-height: 4rem;
        /* padding: 0 0 20px; */

      }

      .answers {
        animation: fadeIn1 2s;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 30px;
      }

      .answer-button {
        background-color: #fff;
        border: 2px solid rgba(67, 97, 238, 0.2);
        border-radius: 15px;
        padding: 20px;
        transition: all 0.3s ease;
        cursor: pointer;
        display: flex;
        align-items: center;

        width: 100%;
        font-size: 1.1rem;
        position: relative;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        overflow: hidden;
      }



      .answer-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--primary);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 0;
      }

      .answer-button:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        border-color: var(--primary);
      }

      .answer-button:hover::before {
        opacity: 0.05;
      }

      .answer-button.selected {
        background: var(--primary);
        color: white;
        border-color: var(--primary);
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(67, 97, 238, 0.2);
      }









      .selected-answer {
        background: var(--primary);
        color: white;
        border-color: var(--primary);
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(67, 97, 238, 0.2);
      }

      .correct {
        background: var(--success);
        color: white;
        border-color: var(--success);
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(76, 201, 240, 0.2);
      }

      .incorrect {
        background: var(--danger);
        color: white;
        border-color: var(--danger);
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(249, 65, 68, 0.2);
      }

      .option-number {
        width: 40px;
        height: 40px;
        background: var(--light);
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-right: 15px;
        font-weight: bold;
        color: var(--primary);
        border: 2px solid var(--primary);
        z-index: 1;
      }

      .answer-button.selected .option-number,
      .answer-button.correct .option-number,
      .answer-button.incorrect .option-number {
        background: rgba(255, 255, 255, 0.3);
        color: white;
        border-color: currentColor;
      }



      .timer-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 15px 20px;
        background: linear-gradient(90deg, rgba(67, 97, 238, 0.1) 0%, rgba(58, 12, 163, 0.1) 100%);
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      }

      .qtimer {
        font-size: 1.5rem;
        font-weight: bold;
        color: var(--primary);
        display: flex;
        align-items: center;
      }

      .qtimer i {
        margin-right: 10px;
        font-size: 1.8rem;
      }

      .progress-bar {
        flex-grow: 1;
        height: 10px;
        background: rgba(0, 0, 0, 0.05);
        border-radius: 5px;
        margin: 0 20px;
        overflow: hidden;
        position: relative;
      }

      .progress {
        height: 100%;
        background: var(--gradient);
        width: 0%;
        transition: width 1s linear;
        border-radius: 5px;
      }

      .progress::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(90deg,
            rgba(255, 255, 255, 0.1) 0%,
            rgba(255, 255, 255, 0.2) 50%,
            rgba(255, 255, 255, 0.1) 100%);
        animation: shimmer 2s infinite;
      }

      @keyframes shimmer {
        0% {
          transform: translateX(-100%);
        }

        100% {
          transform: translateX(100%);
        }
      }

      .score {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--primary);
      }

      .score span {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--secondary);
      }










      /* Mobile-First Design */
      @media (max-width: 992px) {
        .quiz-container {
          flex-direction: column;
          height: auto;
        }

        .main-content {
          border-right: none;
          border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .answers {
          grid-template-columns: 1fr;
        }

        .sidebar {
          border-left: none;
          border-top: 1px solid rgba(0, 0, 0, 0.05);
        }

        .friends-section {
          margin-top: 20px;
        }
      }

      @media (max-width: 768px) {
        .container {
          max-width: 100%;
          border-radius: 15px;
        }

        header {
          padding: 20px;
        }

        h1 {
          font-size: 2rem;
        }

        .question {
          font-size: 1.6rem;
        }

        .answers {
          grid-template-columns: 1fr;
        }

        .friend-avatar {
          width: 45px;
          height: 45px;
        }

        .friend-name {
          font-size: 1rem;
        }

        .friend-score {
          font-size: 0.9rem;
        }

        .friend-status {
          font-size: 0.8rem;
          padding: 3px 8px;
        }

        .rank-badge {
          width: 25px;
          height: 25px;
          font-size: 0.8rem;
        }
      }

      @media (max-width: 576px) {
        body {
          padding: 10px;
        }

        header {
          padding: 15px;
        }

        h1 {
          font-size: 1.8rem;
        }

        .question {
          font-size: 1.4rem;
        }

        .answer-button {
          padding: 15px;
          font-size: 1rem;
        }

        .option-number {
          width: 35px;
          height: 35px;
          font-size: 0.9rem;
        }

        .qtimer {
          font-size: 1.1rem;
        }

        .qtimer i {
          font-size: 1.3rem;
        }

        .score {
          font-size: 1rem;
        }

        .score span {
          font-size: 1.2rem;
        }

        .friend-avatar {
          width: 40px;
          height: 40px;
          font-size: 1rem;
        }

        .friend-name {
          font-size: 0.9rem;
        }

        .friend-score {
          font-size: 0.85rem;
        }

        .friend-status {
          font-size: 0.7rem;
          padding: 2px 6px;
        }

        .rank-badge {
          width: 25px;
          height: 25px;
          font-size: 0.8rem;
        }

        .modal-content {
          padding: 20px;
        }

        .modal-title {
          font-size: 1.8rem;
        }

        .result-score {
          font-size: 2.5rem;
        }

        .result-message {
          font-size: 1rem;
        }

        .action-buttons {
          flex-direction: column;
          gap: 10px;
        }

        .btn {
          width: 100%;
          justify-content: center;
        }
      }


      .sidebar {
        flex: 1;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.05) 0%, rgba(58, 12, 163, 0.05) 100%);
        padding: 25px;
        border-left: 1px solid rgba(0, 0, 0, 0.05);
        display: flex;
        flex-direction: column;
      }

      .friends-section {
        margin-bottom: 20px;
      }

      .friends-section h2 {
        font-size: 1.4rem;
        margin-bottom: 20px;
        color: var(--primary);
        display: flex;
        align-items: center;
        gap: 10px;
        position: relative;
        padding-bottom: 10px;
      }

      .friends-section h2::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50px;
        height: 3px;
        background: var(--gradient);
        border-radius: 3px;
      }

      .friends-list {
        flex-grow: 1;
        overflow-y: auto;
        max-height: 450px;
        padding-right: 10px;
      }

      .friends-list::-webkit-scrollbar {
        width: 6px;
      }

      .friends-list::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.05);
        border-radius: 10px;
      }

      .friends-list::-webkit-scrollbar-thumb {
        background: var(--primary);
        border-radius: 10px;
      }


      .friend {
        display: flex;
        align-items: center;
        padding: 15px;
        border-radius: 12px;
        margin-bottom: 15px;
        background: white;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      .friend::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
            rgba(67, 97, 238, 0.1) 0%,
            rgba(58, 12, 163, 0.1) 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 0;
      }

      .friend:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      }

      .friend:hover::before {
        opacity: 1;
      }

      .friend.active {
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.1) 0%, rgba(58, 12, 163, 0.1) 100%);
        border-left: 4px solid var(--primary);
      }

      .friend-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--gradient);
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        margin-right: 15px;
        box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
        position: relative;
        z-index: 1;
      }

      .friend-info {
        flex-grow: 1;
        z-index: 1;
      }

      .friend-name {
        font-weight: 600;
        margin-bottom: 3px;
        font-size: 1.1rem;
      }

      .friend-score {
        font-size: 0.95rem;
        color: var(--gray);
        display: flex;
        align-items: center;
        gap: 5px;
      }

      .friend-score span {
        font-weight: bold;
        color: var(--primary);
      }

      .friend-status {
        font-size: 0.85rem;
        padding: 5px 12px;
        border-radius: 20px;
        margin-left: 10px;
        font-weight: 600;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        z-index: 1;
      }

      .status-answering {
        background: rgba(76, 201, 240, 0.2);
        color: #0077b6;
      }

      .status-waiting {
        background: rgba(249, 199, 79, 0.2);
        color: #e85d04;
      }

      .status-completed {
        background: rgba(72, 149, 239, 0.2);
        color: #1d3557;
      }

      .rank-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 0.9rem;
        color: white;
        z-index: 1;
      }

      .rank-1 {
        background: linear-gradient(135deg, #f9c74f 0%, #f8961e 100%);
      }

      .rank-2 {
        background: linear-gradient(135deg, #90be6d 0%, #43aa8b 100%);
      }

      .rank-3 {
        background: linear-gradient(135deg, #f94144 0%, #f3722c 100%);
      }

      .rank-other {
        background: var(--gray);
      }









































      .timer-container {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 10;
        /* لضمان بقاء المؤقت فوق العناصر الأخرى */
      }

      canvas {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #fff;
        border: 2px solid #007bff;
      }

      .timer {
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        font-size: .8rem;
        color: #333;
        z-index: 1;
      }



      #quiz {
        min-height: 20rem;
        margin-top: 2rem;
        /* Make space for the timer */
      }




      #results {
        margin-top: 20px;
        font-size: 18px;
        text-align: center;
      }

      .results-container {
        margin: 20px 0;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        text-align: center;
      }

      .results-title {
        font-size: 24px;
        margin-bottom: 20px;
        color: #333;
      }

      .results-score {
        font-size: 20px;
        margin-bottom: 30px;
        color: #28a745;
      }

      .results-score strong {
        font-weight: bold;
      }

































      .avatar-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
      }

    .rank-change {
            position: absolute;
            background: rgba(255, 255, 255, 0.9);
            color: var(--primary);
            font-weight: bold;
            font-size: 0.8rem;
            padding: 2px 6px;
            border-radius: 10px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 10;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            opacity: 0;
            transition: all 0.3s ease;
        }
        .rank-up {
            color: #43aa8b;
        }
        .rank-down {
            color: #f94144;
        }
        .rank-change.show {
            opacity: 1;
            transform: translate(-50%, -100%);
        }






      /* Toast Notification */
      .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1001;
      }

      .toast {
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateX(100%);
        opacity: 0;
        transition: all 0.3s ease;
      }

      .toast.show {
        transform: translateX(0);
        opacity: 1;
      }

      .toast-content {
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .toast-icon {
        font-size: 1.2rem;
      }

      .toast-message {
        font-weight: 500;
      }

      .toast-success {
        background: rgba(76, 201, 240, 0.2);
        color: #0077b6;
        border-left: 4px solid #0077b6;
      }

      .toast-error {
        background: rgba(249, 65, 68, 0.2);
        color: #7f0000;
        border-left: 4px solid #7f0000;
      }

      .toast-warning {
        background: rgba(249, 199, 79, 0.2);
        color: #e85d04;
        border-left: 4px solid #e85d04;
      }

      .toast-info {
        background: rgba(67, 97, 238, 0.2);
        color: var(--primary);
        border-left: 4px solid var(--primary);
      }
    </style>
    <style>
      .end-test-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
      }




      @keyframes fadeIn {
        from {
          opacity: 0;

        }

        to {
          opacity: 1;
          scale: 1.3;


        }
      }

      @keyframes fadeIn1 {
        from {
          opacity: 0;
        }

        to {

          opacity: 1;
        }
      }
    </style>


    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/sockets/challengeStartSocket.js"></script>

    <style>
      #copyIcon {
        flex-shrink: 0;
        cursor: pointer;
        transition: transform 0.3s ease;
      }

      #copyIcon:hover {
        transform: scale(1.1);
      }

      #onlineusers {
        min-height: 86px;
      }

      .gradient-circle {

        width: 37px;
        /* عرض الدائرة */
        height: 37px;
        /* ارتفاع الدائرة */

        background-color: #1e190d;
        ;
        /* لون الخلفية للـ div */
        border-radius: 50%;
        /* لجعل الشكل دائري */
        position: relative;
        /* لجعل العناصر المطلقة تعمل بشكل صحيح */
        display: flex;
        /* لمركز المحتوى */
        justify-content: center;
        /* لمركز المحتوى أفقياً */
        align-items: center;
        /* لمركز المحتوى عمودياً */
        /* border:  solid transparent; */
        /* الحدود الأساسية بسمك 1rem */
        box-sizing: border-box;
        /* لاحتساب الحدود في حجم العنصر */

      }

      .gradient-circle::before {
        content: '';
        position: absolute;
        top: -4px;
        /* ضعه على الحافة العليا */
        left: -4px;
        /* ضعه على الحافة اليسرى */
        right: -4px;
        /* ضعه على الحافة اليمنى */
        bottom: -4px;
        /* ضعه على الحافة السفلى */
        background: linear-gradient(58deg, #5AA4E8 0%, #5AA4E8 48%, #137489 84%, #137489 100%);

        /* background: linear-gradient(38deg, #5AA4E8, #137489);  */
        /* تدرج الألوان */
        border-radius: 50%;
        /* لجعل الشكل دائري */
        z-index: -1;
        /* إرسال الخلفية إلى الخلف */
      }

      .num {
        animation: fadeIn 1s;
        font-size: 100px;
        display: none;
      }


      @keyframes fadeIn {
        from {
          opacity: 0;

        }

        to {
          opacity: 1;
          scale: 1.3;


        }
      }

      @keyframes fadeIn1 {
        from {
          opacity: 0;
        }

        to {

          opacity: 1;
        }
      }
    </style>

  </head>

  <body>

    <header id="main-header"
      style="width: 92%; height: 55px; display: none;justify-content: space-between;align-items: center;margin: auto;">

      <a id="back" href="/challenge">
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"
          style="width: 40px; height: 40px;" preserveAspectRatio="none">
          <path d="M25 30L15 20L25 10" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
          </path>
        </svg>

      </a>

      <h1 id="header-h1" style=" font-size: 24px; color: #fff;margin: 0;padding: 8px;">
        respiratory system
      </h1>

    </header>

    <section id="ready-section" style="display: none;">
      <!-- link -->
      <div id="invitation-link"
        style="margin:25px auto;padding: 0 8px;border-radius: 4px;background-color: rgb(217 217 217 / 4%);width: 92%;height: 30px;display: flex;justify-content: space-between;align-items: center;gap: 4px;/* margin: auto; */">
        <div id="invLink" style=" font-size: 14px; text-align: left; color: rgba(255,255,255,0.7);overflow: overlay;">
          hello
        </div>

        <svg id="copyIcon" onclick=copy(this) width="16" height="16" viewBox="0 0 16 16" fill="none"
          xmlns="http://www.w3.org/2000/svg" style="width: 16px; height: 16px;cursor: pointer;"
          preserveAspectRatio="none">
          <g clip-path="url(#clip0_117_172)">
            <path style="transition: all 0.3s ease;"
              d="M3.33325 10H2.66659C2.31296 10 1.97382 9.85956 1.72378 9.60952C1.47373 9.35947 1.33325 9.02033 1.33325 8.66671V2.66671C1.33325 2.31309 1.47373 1.97395 1.72378 1.7239C1.97382 1.47385 2.31296 1.33337 2.66659 1.33337H8.66659C9.02021 1.33337 9.35935 1.47385 9.60939 1.7239C9.85944 1.97395 9.99992 2.31309 9.99992 2.66671V3.33337M7.33325 6.00004H13.3333C14.0696 6.00004 14.6666 6.59699 14.6666 7.33337V13.3334C14.6666 14.0698 14.0696 14.6667 13.3333 14.6667H7.33325C6.59687 14.6667 5.99992 14.0698 5.99992 13.3334V7.33337C5.99992 6.59699 6.59687 6.00004 7.33325 6.00004Z"
              stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path>
          </g>
          <defs>
            <clipPath id="clip0_117_172">
              <rect width="16" height="16" fill="white"></rect>
            </clipPath>
          </defs>
        </svg>


      </div>


      <div id="readyUsers-header" style="width:92%; height: 43px; margin: auto;padding: 1rem; border-radius: 4px; background: rgba(217,217,217,0.02); box-shadow: 0px 4px 4px 0 rgba(0,0,0,0.25);display: flex;align-items: center;
    justify-content: space-between;
">
        <p style="font-weight: 600;background-color: rgb(217, 217, 217, 0);width: 100%;font-size: 17px;color: #fff;">
          Ready users
        </p>

        <div style="display: flex;gap: 4px;color: rgba(255, 255, 255, 0.995);">
          <span id="readyUsersNum">123</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person"
            viewBox="0 0 16 16">
            <path
              d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
          </svg>

        </div>
      </div>

      <div id="readyUsers" class="grid-container"
        style="overflow:scroll;width:92%; height: 208px;margin: auto;padding: 1rem; background: rgba(217,217,217,0.1);display: grid;grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));gap: 1rem;justify-items: center;justify-content: space-around;">

      </div>

      <div id="start" onclick="start(this)"
        style="display: flex; justify-content: center; align-items: center; width: 84px; height: 30px;padding:4px 20px;border-radius: 4px; background: #15962a;margin: 1rem auto;cursor: pointer; font-size: 1rem; font-weight: 700; color: #fff">
        Start
      </div>

    </section>

    <div id="timerContair"
      style="height: 92vw;width: 92%;margin: auto;display: none;justify-content: center;align-items: center;flex-direction: column;gap:16px">

      <p
        style="width: 92%;  font-size: 54px; font-weight: 700; text-align: left; color: #baffe9;text-align: center;padding: 8px;">
        Get ready
      </p>

      <div id="startTimer"
        style="width: 50%;height: 50%; background-color: #03101f;border-radius: 50%;display: flex;justify-content: center;align-items: center;color: #fff; visibility:visible;">


      </div>

    </div>






    <!-- competition -->
    <div id="competition" class="quiz-container">

      <div class="main-content">

        <div class="timer-section">
          <div class="qtimer">
            <i class="fas fa-clock"></i>
            <span id="timer">30</span>s
          </div>
          <div class="progress-bar">
            <div class="progress" id="progress"></div>
          </div>
          <div class="score">Score: <span id="score">0</span></div>
        </div>



        <p style="display: none;" id="questionNum">
          1/10
        </p>


        <div id="quiz"></div>




      </div>



      <div class="sidebar">
        <div class="friends-section">
          <h2><i class="fas fa-users"></i> Friends Leaderboard</h2>
          <div class="friends-list">
            <div class="friend active">
              <div class="friend-avatar">Y</div>
              <div class="friend-info">
                <div class="friend-name">You</div>
                <div class="friend-score">Score: <span>200</span></div>
              </div>
              <div class="friend-status status-answering">Answering</div>
              <div class="rank-badge rank-1">1</div>
            </div>

            <div class="friend">
              <div class="friend-avatar">A</div>
              <div class="friend-info">
                <div class="friend-name">Alex</div>
                <div class="friend-score">Score: <span>180</span></div>
              </div>
              <div class="friend-status status-waiting">Waiting</div>
              <div class="rank-badge rank-2">2</div>
            </div>

            <div class="friend">
              <div class="friend-avatar">S</div>
              <div class="friend-info">
                <div class="friend-name">Sarah</div>
                <div class="friend-score">Score: <span>150</span></div>
              </div>
              <div class="friend-status status-answering">Answering</div>
              <div class="rank-badge rank-3">3</div>
            </div>

            <div class="friend">
              <div class="friend-avatar">M</div>
              <div class="friend-info">
                <div class="friend-name">Mike</div>
                <div class="friend-score">Score: <span>120</span></div>
              </div>
              <div class="friend-status status-waiting">Waiting</div>
              <div class="rank-badge rank-other">4</div>
            </div>

            <div class="friend">
              <div class="friend-avatar">J</div>
              <div class="friend-info">
                <div class="friend-name">Jessica</div>
                <div class="friend-score">Score: <span>90</span></div>
              </div>
              <div class="friend-status status-waiting">Waiting</div>
              <div class="rank-badge rank-other">5</div>
            </div>
          </div>
        </div>


      </div>




    </div>


    <div id="results" style="display: none;">
      <div id="scoreDiv" class="results-container">
        <h2 class="results-title">نتائج الاختبار</h2>
        <p id="score" class="results-score"></p>
        <button id="retry" class="navigation-button">إعادة الاختبار</button>
      </div>

    </div>


    <!-- Toast Notification Container -->
    <div class="toast-container" id="toast-container"></div>

  </body>



  <script>

    const Id = "<%= challengeId %>"
    const userId = "<%= userId %>"

    if (Id) {
      invLink = document.getElementById("invLink")
      invLink.innerText = `${location.origin}/challenge/${Id}`
    } else {
      console.log(Id)
    }

    function copy(e) {

      // Get the text field
      var copyText = document.getElementById("invLink");
      const originalIcon = 'M3.33325 10H2.66659C2.31296 10 1.97382 9.85956 1.72378 9.60952C1.47373 9.35947 1.33325 9.02033 1.33325 8.66671V2.66671C1.33325 2.31309 1.47373 1.97395 1.72378 1.7239C1.97382 1.47385 2.31296 1.33337 2.66659 1.33337H8.66659C9.02021 1.33337 9.35935 1.47385 9.60939 1.7239C9.85944 1.97395 9.99992 2.31309 9.99992 2.66671V3.33337M7.33325 6.00004H13.3333C14.0696 6.00004 14.6666 6.59699 14.6666 7.33337V13.3334C14.6666 14.0698 14.0696 14.6667 13.3333 14.6667H7.33325C6.59687 14.6667 5.99992 14.0698 5.99992 13.3334V7.33337C5.99992 6.59699 6.59687 6.00004 7.33325 6.00004Z';
      // Modern check mark icon path for success
      const successIcon = 'M1 12.5L5 16L15 6'; // Check mark path


      // Copy the text inside the text field
      navigator.clipboard.writeText(copyText.innerHTML).then(() => {






        // Change icon to success icon
        e.getElementsByTagName("path")[0].setAttribute('d', successIcon);
        e.getElementsByTagName("path")[0].setAttribute("stroke", "rgb(0, 255, 41)")

        setTimeout(() => {
          e.getElementsByTagName("path")[0].setAttribute('d', originalIcon);  // Revert to original icon
          e.getElementsByTagName("path")[0].setAttribute("stroke", "white")

        }, 1500);  // Keep success icon for 1.5 seconds







      }).catch(err => {

        console.error('Failed to copy text: ', err);
      });;


    }

  </script>




  <script>
    let timerInterval;
    // const canvas = document.getElementById('timerCanvas');
    // const ctx = canvas.getContext('2d');
    // const radius = canvas.width / 2;





    async function getCompetitionInfo() {

      try {
        const response = await fetch(`/api/v1/Challanges/${Id}`);
        const res = await response.json();
        console.log(res)

      } catch (error) {
        console.error('Error fetching test:', error);
      }
    }
    getCompetitionInfo()

    // function startTimer(duration) {
    //   clearInterval(timerInterval);

    //   timerElement = document.getElementById("question-timer")
    //   let timeRemaining = duration
    //   const minutes = Math.floor(timeRemaining / 60);
    //   const seconds = timeRemaining % 60;
    //   // timerElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    //   timerElement.textContent = `${timeRemaining}`;
    //   console.log(timerElement.textContent)

    //   drawTimerCircle(timeRemaining, duration);

    //   timeRemaining--;

    //   timerInterval = setInterval(() => {
    //     const minutes = Math.floor(timeRemaining / 60);
    //     const seconds = timeRemaining % 60;
    //     // timerElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    //     timerElement.textContent = `${timeRemaining}`;

    //     console.log(timerElement.textContent)

    //     drawTimerCircle(timeRemaining, duration);

    //     timeRemaining--;

    //     if (timeRemaining < 0) {
    //       clearInterval(timerInterval);
    //       // showResults();
    //     }
    //   }, 1000);
    // }

    function drawTimerCircle(timeRemaining, duration) {
      const percentage = timeRemaining / duration;
      const endAngle = 2 * Math.PI * (1 - percentage);

      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.beginPath();
      ctx.arc(radius, radius, radius - 1, -Math.PI / 2, endAngle - Math.PI / 2);
      ctx.lineWidth = 10;
      ctx.strokeStyle = '#FF7b0f'; // لون الشريط الدائري
      ctx.stroke();
      ctx.beginPath();
      ctx.arc(radius, radius, radius - 10, 0, 2 * Math.PI);
      ctx.lineWidth = 10;
      ctx.strokeStyle = '#f4f4f4'; // خلفية الشريط الدائري
      ctx.stroke();
    }

    document.getElementById('quiz').addEventListener('click', selectAnswer);

  </script>

  </html>